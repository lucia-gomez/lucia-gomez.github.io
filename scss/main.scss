$red: #e63946;
$darkblue: #1d3557;
$mediumblue: #457b9d;
$lightblue: #a8dadc;
$white: #f1faee;
$overlay-color: rgba(69, 123, 157, 0.8);
$smallfont: 'Roboto', sans-serif;
$bigfont: 'Anton', sans-serif;

html {
  scroll-behavior: smooth;
}

body {
  background-color: $darkblue;
  color:$white;
  font-family: $smallfont;
  position: relative;
}

nav {
  background-color: $red;
}

section {
  height: 100vh;
  text-align: center;
}

#home {
  padding-top: 150px;
}

/// Resize profile picture based on viewport size, with max/min bounds
///
/// @author adapted from Eduardo Boucas (@eduardoboucas)
///
/// @param {Number}   $responsive  - Viewport-based size
/// @param {Number}   $min         - Minimum font size (px)
/// @param {Number}   $max         - Maximum font size (px)
///                                  (optional)
/// @param {Number}   $fallback    - Fallback for viewport-
///                                  based units (optional)
///
@mixin responsive-profile-pic($responsive, $min, $max: false, $fallback: false) {
  $responsive-unitless: $responsive / ($responsive - $responsive + 1);
  $dimension: if(unit($responsive) == 'vh', 'height', 'width');
  $min-breakpoint: $min / $responsive-unitless * 100;
  
  @media (max-#{$dimension}: #{$min-breakpoint}) {
    height: $min;
    width: $min;
    border-radius: $min;
  }
  
  @if $max {
    $max-breakpoint: $max / $responsive-unitless * 100;
    
    @media (min-#{$dimension}: #{$max-breakpoint}) {
      height: $max;
      width: $max;
      border-radius: $max;
    }
  }
  
  @if $fallback {
    height: $fallback;
    width: $fallback;
    border-radius: $fallback;
  }
  
  height: $responsive;
  width: $responsive;
  border-radius: $responsive;
}

#profile-pic {
  border: 5px solid $red;
  @include responsive-profile-pic(35vw, 230px, 350px, 200px);
}

/* BEGIN OVER IMAGE */
.hover-wrap {
  position: relative;
}

.hover-wrap .overlay {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  margin: 0;
  background: $overlay-color;
  color: #fff;
  visibility: hidden;
  opacity: 0;
  transition: opacity .2s, visibility .2s;
}

.hover-wrap:hover .overlay {
  visibility: visible;
  opacity: 1;
}

.hover-wrap .overlay p {
  width: 200px;
  position: absolute;
  top: 50%;
  left: 50%;
  font-size: 20px;
  -webkit-transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
  text-align: center;
}
/* END OVER IMAGE */

#hover-wrap-profile-pic.hover-wrap {
  @include responsive-profile-pic(35vw, 230px, 350px, 200px);
  margin: auto;
}

#overlay-profile-pic.overlay {
  border: 5px solid $red;
  @include responsive-profile-pic(35vw, 230px, 350px, 200px);
}

/// Resize section header text size based on viewport size, with max/min bounds
///
/// @author adapted from Eduardo Boucas (@eduardoboucas)
///
/// @param {Number}   $responsive  - Viewport-based size
/// @param {Number}   $min         - Minimum font size (px)
/// @param {Number}   $max         - Maximum font size (px)
///                                  (optional)
/// @param {Number}   $fallback    - Fallback for viewport-
///                                  based units (optional)
///
@mixin responsive-big-text($responsive, $min, $max: false, $fallback: false) {
  $responsive-unitless: $responsive / ($responsive - $responsive + 1);
  $dimension: if(unit($responsive) == 'vh', 'height', 'width');
  $min-breakpoint: $min / $responsive-unitless * 100;
  
  @media (max-#{$dimension}: #{$min-breakpoint}) {
    font-size: $min;
  }
  
  @if $max {
    $max-breakpoint: $max / $responsive-unitless * 100;
    
    @media (min-#{$dimension}: #{$max-breakpoint}) {
      font-size: $max;
    }
  }
  
  @if $fallback {
    font-size: $fallback;
  }
  
  font-size: $responsive;
}

h1 {
  font-family: $bigfont;
  @include responsive-big-text(7vw, 50px, 90px, 60px)
}

#about {
  background-color: $mediumblue;
  color: $white;
  padding-top: 150px;
}

#portfolio {
  background-color: $white;
  color: $darkblue;
  min-height: 100vh;
  height: auto;
  padding-top: 150px;
}

#section-404 {
  background-color: $red;
  color: $white;
  display: flex;
  justify-content: center;
  align-items: center;
}

#section-404 img {
  @include responsive-profile-pic(35vw, 230px, 350px, 200px);
  width: auto!important;
}

.lang-progress {
  margin: 0px 10px;
}

.progress {
  background-color: $white;
  height: 15px;
  margin-top: 1rem;
  width: 25vw;
}

.progress-bar1 {
  background-color: $red;
}

.progress-bar2 {
  background-color: $red;
}

.progress-bar3 {
  background-color: $red;
}

.progress-bar4 {
  background-color: $red;
}

.progress-label {
  float: left;
  line-height: 15px;
  margin-right: 1em;
  text-align: right;
  width: 80px;
}

.gallery-flex-container {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: center;
  padding: 20px;
}

.gallery-item {
  height: 250px;
  width: 250px;
  background-color: $lightblue;
  color: $darkblue;
  border-radius: 5px;
  margin: 5px;
}

.gallery-item .overlay {
  border-radius: 5px 5px 0px 0px;
  height: 200px;
  margin: 5px;
}

.gallery-item .overlay p {
  font-size: 16px;
}

.gallery-image {
  border-radius: 5px 5px 0px 0px;
  background-size: 150%; 
  background-position: top center;
  height: 80%;
  width: 100%;
}

.gallery-text {
  padding: 10px;
}